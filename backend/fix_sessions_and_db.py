#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å —Å–µ—Å—Å–∏—è–º–∏ –∏ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
"""
import os
import sys
import django
from django.conf import settings
from django.core.management import execute_from_command_line

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'eventum.settings')
django.setup()

from django.db import connection
from django.contrib.sessions.models import Session
from django.core.management import call_command
import logging

logger = logging.getLogger(__name__)

def test_database_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    try:
        with connection.cursor() as cursor:
            cursor.execute("SELECT 1")
            result = cursor.fetchone()
            print("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def clear_problematic_sessions():
    """–û—á–∏—â–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–µ—Å—Å–∏–∏"""
    try:
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Å—Å–∏–π –¥–æ –æ—á–∏—Å—Ç–∫–∏
        total_sessions = Session.objects.count()
        print(f"üìä –í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {total_sessions}")
        
        # –û—á–∏—â–∞–µ–º –≤—Å–µ —Å–µ—Å—Å–∏–∏ (—ç—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–ª–æ–≥–∏–Ω—è—Ç—Å—è)
        deleted_count = Session.objects.all().delete()[0]
        print(f"üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–µ—Å—Å–∏–π: {deleted_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞
        remaining_sessions = Session.objects.count()
        print(f"üìä –û—Å—Ç–∞–≤—à–∏—Ö—Å—è —Å–µ—Å—Å–∏–π: {remaining_sessions}")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–µ—Å—Å–∏–π: {e}")
        return False

def run_migrations():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏"""
    try:
        print("üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π...")
        call_command('migrate', verbosity=0)
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π: {e}")
        return False

def check_session_table():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã —Å–µ—Å—Å–∏–π"""
    try:
        with connection.cursor() as cursor:
            cursor.execute("""
                SELECT column_name, data_type 
                FROM information_schema.columns 
                WHERE table_name = 'django_session'
                ORDER BY ordinal_position
            """)
            columns = cursor.fetchall()
            
            if columns:
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ django_session —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                print("üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã:")
                for column_name, data_type in columns:
                    print(f"   - {column_name}: {data_type}")
                return True
            else:
                print("‚ùå –¢–∞–±–ª–∏—Ü–∞ django_session –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã —Å–µ—Å—Å–∏–π: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å —Å–µ—Å—Å–∏—è–º–∏ –∏ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    if not test_database_connection():
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É —Å–µ—Å—Å–∏–π
    if not check_session_table():
        print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ç–∞–±–ª–∏—Ü–µ–π —Å–µ—Å—Å–∏–π. –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏...")
        if not run_migrations():
            return False
    
    # –û—á–∏—â–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–µ—Å—Å–∏–∏
    if not clear_problematic_sessions():
        return False
    
    print("\n‚úÖ –í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
    print("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä Django")
    print("   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –∑–∞–Ω–æ–≤–æ")
    print("   - –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –æ—à–∏–±–æ–∫")
    
    return True

if __name__ == '__main__':
    success = main()
    sys.exit(0 if success else 1)
