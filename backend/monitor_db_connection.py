#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
"""
import os
import sys
import time
import django
from django.conf import settings
from django.db import connection, transaction
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'eventum.settings')
django.setup()

logger = logging.getLogger(__name__)

def test_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    try:
        with connection.cursor() as cursor:
            cursor.execute("SELECT 1")
            result = cursor.fetchone()
            return True, "OK"
    except Exception as e:
        return False, str(e)

def test_transaction():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é"""
    try:
        with transaction.atomic():
            with connection.cursor() as cursor:
                cursor.execute("SELECT NOW()")
                result = cursor.fetchone()
            return True, "OK"
    except Exception as e:
        return False, str(e)

def monitor_connection(duration_minutes=5, interval_seconds=10):
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    print(f"üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–µ—á–µ–Ω–∏–µ {duration_minutes} –º–∏–Ω—É—Ç")
    print(f"‚è±Ô∏è  –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: {interval_seconds} —Å–µ–∫—É–Ω–¥")
    print("=" * 60)
    
    start_time = time.time()
    end_time = start_time + (duration_minutes * 60)
    
    success_count = 0
    error_count = 0
    ssl_errors = 0
    session_errors = 0
    
    while time.time() < end_time:
        current_time = time.strftime("%H:%M:%S")
        
        # –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        conn_success, conn_error = test_connection()
        
        # –¢–µ—Å—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        trans_success, trans_error = test_transaction()
        
        if conn_success and trans_success:
            print(f"[{current_time}] ‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ: OK | –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è: OK")
            success_count += 1
        else:
            error_count += 1
            error_msg = conn_error if not conn_success else trans_error
            
            # –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
            if "SSL" in error_msg.upper() or "EOF" in error_msg.upper():
                ssl_errors += 1
                print(f"[{current_time}] ‚ùå SSL/EOF –æ—à–∏–±–∫–∞: {error_msg}")
            elif "session" in error_msg.lower() or "_session_cache" in error_msg:
                session_errors += 1
                print(f"[{current_time}] ‚ùå –û—à–∏–±–∫–∞ —Å–µ—Å—Å–∏–∏: {error_msg}")
            else:
                print(f"[{current_time}] ‚ùå –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞: {error_msg}")
        
        time.sleep(interval_seconds)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_tests = success_count + error_count
    success_rate = (success_count / total_tests * 100) if total_tests > 0 else 0
    
    print("\n" + "=" * 60)
    print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê")
    print("=" * 60)
    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {success_count}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {error_count}")
    print(f"üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {success_rate:.1f}%")
    print(f"üîí SSL/EOF –æ—à–∏–±–æ–∫: {ssl_errors}")
    print(f"üç™ –û—à–∏–±–æ–∫ —Å–µ—Å—Å–∏–π: {session_errors}")
    
    if ssl_errors > 0:
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è SSL –æ—à–∏–±–æ–∫:")
        print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å —Å–µ—Ç–µ–≤–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
        print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –ë–î –¥–æ—Å—Ç—É–ø–µ–Ω")
        print("   - –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ CONN_MAX_AGE")
    
    if session_errors > 0:
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –æ—à–∏–±–æ–∫ —Å–µ—Å—Å–∏–π:")
        print("   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python fix_sessions_and_db.py")
        print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SESSION_ENGINE")
        print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ django_session —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    return success_rate > 80

if __name__ == '__main__':
    if len(sys.argv) > 1:
        try:
            duration = int(sys.argv[1])
        except ValueError:
            duration = 5
    else:
        duration = 5
    
    success = monitor_connection(duration)
    sys.exit(0 if success else 1)
